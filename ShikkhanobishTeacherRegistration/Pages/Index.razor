@page "/"
@using System.Timers
    <div class="gradientBAckground">
        <div style="flex:auto">
            <div class="@StartAnim1stBlock">
                <img class="@picClass" src="Logo.png" style="opacity: @op;" />
                <a style="color: black">Welcome To Shikkhanobish Teacher Registration</a><br>
                <div class="basicDiv @animClass" style="opacity: @op; display: @block1and2;">
                    <div class="form__group field">
                        <input class="form__field" @bind="in1" placeholder="Name" name="name" id='name' required />
                        <label for="name" class="form__label" style="color:black">@inL1</label>
                    </div>
                    <div class="form__group field">
                        <input class="form__field" @bind="in2" placeholder="Age" name="name" id='name' required />
                        <label for="name" class="form__label" style="color:black">@inL2</label>
                    </div>
                    <div class="form__group field">
                        <input class="form__field" @bind="in3" placeholder="Institution" name="name" id='name' required />
                        <label for="name" class="form__label" style="color:black">@inL3</label>
                    </div>
                    <div class="form__group field">
                        <input class="form__field" @bind="in4" placeholder="Phonenumber" name="name" id='name' required>
                        <label for="name" class="form__label" style="color:black">@inL4</label>
                    </div>

                    <a class="ErrorText">@ErrorText</a>

                </div>
                <div class="basicDiv @animClass" style="display: @block3">
                    <a style="color: black;"><h5>Select class that you want to teach</h5></a><br>
                    <a class="@buttonClassSix" @onclick="@buttonClikedSix">Class 6 - Class 8</a>
                    <a class="@buttonClassNine" @onclick="@buttonClikedNine">Class 9 - Class 10</a>
                    <a class="@buttonClassEleven" @onclick="@buttonClikedEleven">Class 11 - Class 12</a>
                    <a class="ErrorText">@ErrorText</a>
                </div>
                <div class="basicDiv @animClass" style="display: @block4">
                    <a style="color: black;"><h5>Select group that you want to teach in Class 9</h5></a><br>
                    <a class="@buttonS" @onclick="@buttonClikedS">Science</a>
                    <a class="@buttonC" @onclick="@buttonClikeC">Commerce</a>
                    <a class="@buttonA" @onclick="@buttonCliked">Arts</a>
                    <a class="ErrorText">@ErrorText</a>
                </div>
                @clickCounter @checkedBlock;
                <div>
                    <span class="arrow" @onclick="@BlockGoLB" style="opacity: @leftArrow; margin:10px; display: inline-block; transform: rotateY(180deg); "></span>
                    <span class="arrow" @onclick="@BlockGo" style="opacity: @op; display:  inline-block ;  margin:10px;"></span>
                </div>

            </div>

        </div>



    </div>


@code{
    string StartAnim1stBlock, EndtAnim1stBlock,picClass, animClass;
    Timer timer,picTimer, blockTime;
    string picscr , block1and2, block3,block4;
    int op, leftArrow,checkedBlock;
    string inL1, inL2, inL3, inL4;
    string in1, in2, in3, in4;
    int buttonClickCount;
    string Name = "", Age = "", Ins = "", Pn = "", mail = "", username = "", pass = "", cpass = "", ErrorText = "";
    string fadeInTextRB = "fade-inText-fwdRB", fadeOutTextRB = "fade-out-bckRB";
    string fadeInTextLB = "fade-inText-fwdLB", fadeOutTextLB = "fade-out-bckLB";
    string buttonClassSix, buttonClassNine, buttonClassEleven, buttonS, buttonC, buttonA;

    int jsc, ssc, hsc,jCl,sCl,hCl;
    int clickCounter;
    protected override async Task OnInitializedAsync()
    {
        StartAnim1stBlock = "text-focus-in";
        StateHasChanged();
        timer = new Timer();
        timer.Interval = 2000;
        timer.Elapsed += counter;
        timer.Start();
        op = 0;
        block3 = "none";
        block1and2 = "block";
        block4 = "none";
        clickCounter = 0;
        animClass = "";
        leftArrow = 0;
        picClass = "controlSize";
        inL1 = "Name";
        inL2 = "Age";
        inL3 = "Institution";
        inL4 = "Phonenumber";
        in1 = "";
        in2 = "";
        in3 = "";
        in4 = "";
        checkedBlock = -1;
        buttonClassSix = "semi-transparent-button";
        buttonClassNine = "semi-transparent-button";
        buttonClassEleven = "semi-transparent-button";
        buttonClickCount = 0;
    }

    public void endFirstBlock()
    {
        StartAnim1stBlock = "slide-out-top";
        StateHasChanged();
    }

    private async void counter(object sender, ElapsedEventArgs e)
    {
        StartAnim1stBlock = "slide-tl";
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
        timer.Stop();

        picTimer = new Timer();
        picTimer.Interval = 1000;
        picTimer.Elapsed += picCounter;
        picTimer.Start();

    }
    public void Dispose()
    {
        if (timer != null)
        {
            timer.Dispose();
        }
        if (picTimer != null)
        {
            picTimer.Dispose();
        }
    }
    private async void picCounter(object sender, ElapsedEventArgs e)
    {
        picClass = "fade-in-fwd";
        op = 1;
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }




    public void BlockGo()
    {
        if(clickCounter == 2)
        {

        }
        else if (clickCounter < 2)
        {
            if (checkInfo() == 0)
            {
                SaveInfo();
            }
        }
        clickCounter++;
        if (clickCounter > checkedBlock)
        {
            checkedBlock++;
        }
        leftArrow = 100;
        animClass = fadeOutTextRB;
        {
            StateHasChanged();
        };
        blockTime = new Timer();
        blockTime.Interval = 650;

        blockTime.Elapsed += blockCounter;
        blockTime.Start();

    }
    public void BlockGoLB()
    {
        clickCounter--;
        animClass = fadeOutTextLB;
        {
            StateHasChanged();
        };
        blockTime = new Timer();
        blockTime.Interval = 650;
        blockTime.Elapsed += blockCounterLB;
        blockTime.Start();

        if (clickCounter <= 0)
        {
            leftArrow = 0;
        }

    }

    private async void blockCounter(object sender, ElapsedEventArgs e)
    {
        if(clickCounter == 3)
        {
            chnageBlock();
        }
        else if(clickCounter == 2)
        {
            chnageBlock();
        }
        else if(clickCounter == 1)
        {
            changeInputPlaceholderAndPlaceInfo();
        }
        animClass = fadeInTextRB;
        if (checkedBlock >= clickCounter)
        {
            SetInfo();
        }
        else
        {
            in1 = "";
            in2 = "";
            in3 = "";
            in4 = "";
        }

        blockTime.Stop();
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }
    private async void blockCounterLB(object sender, ElapsedEventArgs e)
    {
        if (clickCounter == 0 || clickCounter == 1)
        {
            changeInputPlaceholderAndPlaceInfo();

        }
        if(clickCounter == 1)
        {
            chnageBlock();
        }
        animClass = fadeInTextLB;
        SetInfo();
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });
        blockTime.Stop();


    }



    public void changeInputPlaceholderAndPlaceInfo()
    {
        if (clickCounter == 0)
        {
            inL1 = "Name";
            inL2 = "Age";
            inL3 = "Institution";
            inL4 = "Phonenumber";
        }
        if (clickCounter == 1)
        {
            inL1 = "E-Mail";
            inL2 = "Username";
            inL3 = "Password";
            inL4 = "Confirm Password";
        }
    }

    public int checkInfo()
    {
        int chk = 0;
        if (clickCounter == 0 || clickCounter == 1)
        {
            if (in1 == "" || in2 == "" || in3 == "" || in4 == "")
            {
                chk = 1;
            }
        }
        if(chk == 1)
        {
            ErrorText = "Empty Box is not allowed";
        }
        else
        {
            ErrorText = "";
        }

        return chk;
    }

    public void chnageBlock ()
    {
        if (clickCounter == 0 || clickCounter == 1)
        {
            block3 =  "none";
            block1and2 = "block";
        }
        if (clickCounter == 2)
        {
            block3 = "block";
            block1and2 = "none";
        }
        if (clickCounter == 3)
        {
            block3 = "none";
            block4 = "block";
        }
    }

    public void SaveInfo()
    {
        if(clickCounter == 0)
        {
            Name = in1;
            Age = in2;
            Ins = in3;
            Pn = in4;
        }
        if (clickCounter == 1)
        {
            mail = in1;
            username = in2;
            pass = in3;
            cpass = in4;

        }
    }
    public void SetInfo()
    {
        if (clickCounter == 0)
        {
            in1 = Name;
            in2 = Age;
            in3 = Ins;
            in4 = Pn;
        }
        if (clickCounter == 1)
        {
            in1 = mail;
            in2 = username;
            in3 = pass;
            in4 = cpass;
        }
    }

    public void buttonClikedSix()
    {
        jsc++;
        if(jsc % 2 != 0)
        {
            buttonClassSix = "semi-transparent-buttonClicked";
            jCl = 1;
        }
        else
        {
            buttonClassSix = "semi-transparent-button";
            jCl = 0;
        }

    }
    public void buttonClikedNine()
    {
        ssc++;
        if (ssc % 2 != 0)
        {
            buttonClassNine = "semi-transparent-buttonClicked";
            sCl = 1;
        }
        else
        {
            buttonClassNine = "semi-transparent-button";
            sCl = 0;
        }

    }
    public void buttonClikedEleven()
    {
        hsc++;
        if (hsc % 2 != 0)
        {
            buttonClassEleven = "semi-transparent-buttonClicked";
            hCl = 1;
        }
        else
        {
            buttonClassEleven = "semi-transparent-button";
            hCl = 0;
        }
    }

    public void buttonClikedS ()
    {

    }
    public void buttonClikedC()
    {

    }
    public void buttonClikedA()
    {

    }
}